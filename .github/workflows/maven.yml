# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
    tags:
      - '*'  # Trigger per tutti i tag 
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  id-token: write
  actions: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Clona tutta la history Git 
    - name: Set timezone to Europe/Rome
      run: sudo timedatectl set-timezone Europe/Rome
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Check NVD_API_KEY
      run: |
        if [ -z "$NVD_API_KEY" ]; then
          echo "NVD_API_KEY is NOT set!"
        else
          echo "NVD_API_KEY is set. Length: ${#NVD_API_KEY}"
        fi
      env:
        NVD_API_KEY: ${{ secrets.NVD_API_KEY }}

    #  Cache .dependency-check/data
    - name: Cache OWASP Dependency-Check DB
      uses: actions/cache@v4
      with:
        path: .dependency-check/data
        key: ${{ runner.os }}-owasp-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-owasp-
          
    - name: Build War with Maven
      run: mvn clean install -P war -DskipTests -Ddependency-check.skip=true
    - name: Build Jar with Maven
      run: mvn install -P jar -Dspring.profiles.active=test -Duser.timezone=Europe/Rome -DnvdApiKey=$NVD_API_KEY -DdataDirectory=.dependency-check/data -Dowasp.format=ALL -Dowasp.output.dir=./dependency-check-report
      env:
        NVD_API_KEY: ${{ secrets.NVD_API_KEY }}

    - name: Show JaCoCo report location and Zip JaCoCo HTML report
      run: |
        ls -lh target/site/jacoco/
        file target/site/jacoco/jacoco.xml || echo "Report non trovato"
        cd target/site
        zip -r ../jacoco-html-report.zip jacoco
        cd ../../
        ls -lh target/  
    
    - name: Copy dependencies
      run: |
        mkdir -p target/dependency
        mvn dependency:copy-dependencies -DoutputDirectory=target/dependency

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v2
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.projectKey=link-it_govpay-gde-api
          -Dsonar.organization=link-it
          -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
          -Dsonar.sources=src/main/java
          -Dsonar.tests=src/test/java
          -Dsonar.java.binaries=target/classes
          -Dsonar.coverage.exclusions=**/test/**,**/*Test*.java
          -Dsonar.java.source=21
          -Dsonar.java.libraries=target/dependency
          
    - name: Upload artifact to GitHub
      uses: actions/upload-artifact@v4.6.0
      with:
        name: govpay-gde-api
        path: |
          target/govpay-gde-api.*
          target/site/jacoco/jacoco.xml
          target/jacoco-html-report.zip
          target/dependency-check-report.html
          target/dependency-check-report.xml
    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@v4.1.0
      with:
        token: ${{ secrets.GH_TOKEN }}
        
  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')  # Esegui solo per i tag

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: govpay-gde-api
        path: target/  # Assicurati che il file venga scaricato nella cartella target

    - name: Rename the artifact file to include the tag
      run: |
        cp target/govpay-gde-api.war target/govpay-gde-api-${{ github.ref_name }}.war  # Rinominare il file war
        cp target/govpay-gde-api.jar target/govpay-gde-api-${{ github.ref_name }}.jar  # Rinominare il file jar
        cp target/site/jacoco/jacoco.xml target/jacoco.xml

    - name: List files in target directory
      run: ls -l target/

    - name: Create GitHub release
      id: create_release
      uses: softprops/action-gh-release@v2.2.1
      with:
        files: |
          target/govpay-gde-api-${{ github.ref_name }}.war 
          target/govpay-gde-api-${{ github.ref_name }}.jar
          target/jacoco.xml
          target/jacoco-html-report.zip
          target/dependency-check-report.html
          target/dependency-check-report.xml
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
