# Disabilita la stampa del banner spring nei log
spring.main.banner-mode=off

# ------------ DIRECTORY LAVORO ESTERNA -----------

# ------------ JSON SERIALIZATION & PRESENTATION-------------------

# Pattern date
spring.mvc.date-format=yyyy-MM-dd
spring.mvc.datetime-format=yyyy-MM-dd'T'HH:mm:ssZZZ
spring.mvc.throw-exception-if-no-handler-found=true

spring.jackson.default-property-inclusion=non_null

# ----------- SPRING SERVLET ------------

server.port=10002

# Impostiamo la servlet path ovvero il path della DispatcherServlet principale
spring.mvc.servlet.path=/api/v1

server.error.whitelabel.enabled=true

spring.jpa.open-in-view=false

# Abilitazione Endpoint /actuator/health/liveness
management.endpoints.web.base-path=/actuator
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true

# ------------ HIBERNATE & JPA -------------------

# Configurazione DB
#spring.datasource.jndiName=govpay
spring.datasource.jndiName=java:comp/env/it.govpay.datasource
#spring.datasource.url=jdbc:postgresql://127.0.0.1:5432/govpay
spring.datasource.driverClassName=org.postgresql.Driver
#spring.datasource.username=govpay
#spring.datasource.password=govpay

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Solo per HSQL
# Console
spring.h2.console.enabled=true
# Consente di specificare se la console H2 deve consentire o meno le richieste da altri host. 
# Se è impostata su true, la console H2 accetterà le richieste da qualsiasi host (indirizzo IP), consentendo l'accesso da remoto. 
# Se è impostata su false, verranno accettate solo le richieste dallo stesso host su cui è in esecuzione l'applicazione.
spring.h2.console.settings.web-allow-others=true

# DDL
spring.jpa.generate-ddl=true
spring.jpa.properties.hibernate.format_sql=true
# none: Hibernate non esegue alcuna operazione di creazione, modifica o rimozione dello schema.
# update: Hibernate aggiorna lo schema del database in base alle entità JPA. Questo significa che può creare nuove tabelle, colonne, indici o chiavi primarie, ma non eliminerà alcun oggetto esistente nel database.
# create: Hibernate elimina e ricrea completamente lo schema del database ogni volta che l'applicazione viene avviata. Questo comporta la perdita di dati esistenti e può essere pericoloso in ambienti di produzione.
# create-drop: Simile a "create", ma elimina completamente lo schema del database quando l'applicazione viene fermata. Utile per lo sviluppo e i test, ma pericoloso in produzione.
# validate: Hibernate verifica solo la corrispondenza tra le entità JPA e lo schema del database esistente, senza apportare modifiche. È utile per controllare la coerenza tra il modello dati e il database senza apportare modifiche.
spring.jpa.hibernate.ddl-auto=validate
# Debug
spring.jpa.show-sql=false
# Generazione Script SQL (decommentare per farli produrre)
#spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=drop-and-create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=/tmp/govpay-aca-batch-schema-create.sql
#spring.jpa.properties.javax.persistence.schema-generation.scripts.drop-target=/tmp/govpay-aca-batch-schema-drop.sql	

# InitSQL
#always: Questa modalita' indica che l'esecuzione dei file SQL di inizializzazione deve avvenire sempre all'avvio dell'applicazione, indipendentemente dal fatto che il database sia vuoto o meno. In altre parole, se sono presenti file SQL di inizializzazione nel percorso specificato, verranno eseguiti ogni volta che l'applicazione viene avviata.
#embedded: Con questa modalita', i file SQL vengono eseguiti solo se si sta utilizzando un database incorporato, come H2, HSQLDB o simili. Se si utilizza un database diverso da un database incorporato, i file SQL non vengono eseguiti.
#never: Questo valore indica che l'esecuzione dei file SQL di inizializzazione non deve avvenire mai durante l'avvio dell'applicazione.
spring.sql.init.mode=never
#spring.sql.init.data-locations=classpath:/static/init.sql

# Datasource
spring.jpa.defer-datasource-initialization=true
spring.datasource.initialization-mode=always


# ------------ LOGGING -------------------

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

logging.file.name=/var/log/govpay/govpay-gde-api.log
logging.level.root=INFO
logging.level.org.springframework=ERROR
logging.level.org.hibernate=ERROR
logging.level.org.hibernate.type.descriptor.sql=ERROR
logging.level.it.govpay=INFO
logging.logback.rollingpolicy.max-history=10
logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG
logging.level.org.springframework.jdbc.core.StatementCreatorUtils=TRACE

# -------------- BUSINESS LOGIC PROPERTIES  ----------------

gde.time-zone=Europe/Rome

